vanityhash, a hex hash fragment creation tool
By Ryan Finnie <ryan@finnie.org>
http://www.finnie.org/software/vanityhash/

ABOUT

vanityhash is a tool that can discover data to be added to the end of a 
file to produce a desired hex hash fragment.  It searches a message 
space and runs a hashing algorithm against the original data plus the 
appended data to determine if the desired hash fragment is present.  
vanityhash can run multiple parallel workers to effectively make use of 
multiple processors/cores/threads, and supports multiple hash digest 
types (MD5, SHA1, SHA256, etc).

INSTALLATION

vanityhash requires Python 2.6 or newer, and has support for Python 3.  
All modules used by vanityhash are part of the core Python distribution.

Digest support depends on the OpenSSL features used to compile hashlib.  
All OpenSSL implementations should support 'md5', 'sha1', 'sha224', 
'sha256', 'sha384' and 'sha512'.  Additionally, it may support digests 
such as 'md4'.  Built-in implementations include 'crc32' and 'adler32'.

To "build" and install vanityhash:

  make
  make install
  make clean

/usr/local is the default Makefile prefix, use PREFIX to override.

USAGE

Please see the man page for full details.

  vanityhash [options] hexfragment < inputfile

  vanityhash --append [options] hexfragment < inputfile > outputfile
